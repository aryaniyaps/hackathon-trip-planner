// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider      = "prisma-client-js"
    binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
    provider = "sqlite"
    url      = env("DATABASE_URL")
}

model BugReport {
    id        Int      @id @default(autoincrement())
    title     String
    content   String
    platform  String
    ownerId   Int
    owner     User     @relation(fields: [ownerId], references: [id])
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

// Necessary for Next auth
model Account {
    id                Int     @id @default(autoincrement())
    userId            Int
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String?
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    user User @relation(fields: [userId], references: [id])

    @@unique([provider, providerAccountId])
}

model Session {
    id           Int      @id @default(autoincrement())
    sessionToken String   @unique
    userId       Int
    expires      DateTime

    user User @relation(fields: [userId], references: [id])
}

model User {
    id                Int       @id @default(autoincrement())
    name              String?
    email             String?   @unique
    emailVerified     DateTime?
    image             String?
    username          String    @unique @default(nanoid(8))
    emailChange       String?
    emailChangeToken  String?
    emailChangeSentAt DateTime?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    accounts   Account[]
    sessions   Session[]
    bugReports BugReport[]
}

model VerificationToken {
    id         Int      @id @default(autoincrement())
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
